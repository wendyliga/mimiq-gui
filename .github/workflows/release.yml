name: Release

# on:
#   push:
#     tags:
#       - '*'

on:
  pull_request:
    branches: [master]
    types: [synchronize, opened, reopened, ready_for_review]

jobs:
  upload_binary:
    name: Notarize Binary
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Dependecies
      run: |
        sudo gem install bundler
        bundle update --bundler
        bundle install
        npm install --global create-dmg
    - name: Notarize
      run: bundle exec fastlane release
      env:
        MATCH_REPO: ${{ secrets.FASTLANE_CODE_SIGN_REPO_URL }}
        MATCH_PASSWORD: ${{ secrets.FASTLANE_MATCH_PASSPHRASE }}
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.FASTLANE_MATCH_GIT_BASIC_AUTHORIZATION }}
        GIT_EMAIL: ${{ secrets.FASTLANE_CODE_SIGN_REPO_USER }}
        APPLE_ID: ${{ secrets.APPLE_ID }} 
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD : ${{ secrets.APPLE_ACCESS_TOKEN }}
        FASTLANE_PASSWORD: ${{ secrets.APPLE_ACCESS_TOKEN }}
        TEAM_NAME: ${{ secrets.TEAM_NAME }} 
        TEAM_ID: ${{ secrets.TEAM_ID }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }} 
        FASTLANE_DONT_STORE_PASSWORD: 1
    - name: Build Sparkle Zip
      run: |
        bundle exec fastlane sparkle_package
        cat ~/sparkle_result | sed -E 's/.*"(.*)".?length.*/\1/' > ~/sparkle_signature
        grep -o 'length=".*"' ~/sparkle_result | tr -d 'length="' > ~/sparkle_length
    - name: Build DMG
      run: bundle exec fastlane create_dmg
    # - name: Upload Zip binaries to release
    #   uses: svenstaro/upload-release-action@v1-release
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     file: .build/mimiq.zip
    #     asset_name: mimiq.zip
    #     tag: ${{ github.ref }}
    #     overwrite: true